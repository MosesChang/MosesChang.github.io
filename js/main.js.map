{"version":3,"sources":["webpack:///./src/states/state.ts","webpack:///./src/states/boot.state.ts","webpack:///./src/states/main.state.ts","webpack:///./src/states/preloader.state.ts","webpack:///./styles/style.styl","webpack:///./assets/images/dude.png","webpack:///./assets/images/platform.png","webpack:///./assets/images/sky.png","webpack:///./assets/images/star.png","webpack:///./src/index.ts"],"names":[],"mappings":";;;;;;AAAa;;;;;;AAIb;IAA6B,yBAAY;IAAzC;;IAEA,CAAC;IAAD,YAAC;AAAD,CAAC,CAF4B,MAAM,CAAC,KAAK,GAExC;;AAED,kBAAe,KAAK,CAAC;;;;;;;;ACRR;;;;;;AACb,cAAc;AACd,qCAA4B;AAE5B,qCAAqC;AACrC;IAAuC,6BAAK;IAA5C;;IAIA,CAAC;IAHC,0BAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IACH,gBAAC;AAAD,CAAC,CAJsC,eAAK,GAI3C;;;;;;;;;;ACTY;;;;;;AACb,cAAc;AACd,qCAA4B;AAE5B,6BAA6B;AAC7B;IAAuC,6BAAK;IAA5C;;IA4CA,CAAC;IAvCC,0BAAM,GAAN;QACE,uEAAuE;QACvE,4EAA4E;QAC5E,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAGrD,0BAA0B;QAC1B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAG7C,uCAAuC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;QAEvC,kEAAkE;QAClE,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;QAGjC,oBAAoB;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAClC,CAAC,EACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,EAC3B,UAAU,CACX,CAAC;QAEF,iEAAiE;QACjE,0CAA0C;QAC1C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzB,qEAAqE;QACrE,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAE7B,sBAAsB;QACtB,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAE7B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC;QAC5D,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC/B,CAAC;IACH,gBAAC;AAAD,CAAC,CA5CsC,eAAK,GA4C3C;;;;;;;;;;ACjDY;;;;;;AACb,cAAc;AACd,qCAA4B;AAE5B,2DAA2D;AAC3D,IAAM,QAAQ,GAAU,mBAAO,CAAC,EAAuB,CAAC,CAAC,CAAC,6CAA6C;AACvG,IAAM,aAAa,GAAK,mBAAO,CAAC,EAA4B,CAAC,CAAC;AAC9D,IAAM,SAAS,GAAS,mBAAO,CAAC,EAAwB,CAAC,CAAC;AAC1D,IAAM,SAAS,GAAS,mBAAO,CAAC,EAAwB,CAAC,CAAC;AAG1D,oDAAoD;AACpD;IAA4C,kCAAK;IAAjD;;IAeA,CAAC;IAdC,gCAAO,GAAP;QACE,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,+BAAM,GAAN;QACE,OAAO,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAE1C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,4BAA4B;IAC7D,CAAC;IACH,qBAAC;AAAD,CAAC,CAf2C,eAAK,GAehD;;;;;;;;;;;;AC3BD,yC;;;;;;;;ACAA,kE;;;;;;ACAA,sE;;;;;;ACAA,iE;;;;;;ACAA,kE;;;;;;;;;;;;;;;8CCAa;;;;;;AACb,cAAc;AACd,2FAA2F;AAC3F,mBAAO,CAAC,CAAM,CAAC,CAAC,CAAI,mFAAmF;AACvG,mBAAO,CAAC,CAAI,CAAC,CAAC;AACd,mBAAO,CAAC,CAAQ,CAAC,CAAC,CAAE,oFAAoF;AAExG,uBAA2B,CAAC,mEAAmE;AAE/F,0CAAmD;AACnD,+CAAwD;AACxD,0CAAmD;AAGnD,oCAAoC;AACpC;IAAiC,uBAAW;IAC1C,aAAY,MAA0B;QAAtC,YACE,kBAAM,MAAM,CAAC,SAOd;QALC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,oBAAS,CAAC,CAAC;QAClC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,yBAAc,CAAC,CAAC;QAC5C,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,oBAAS,CAAC,CAAC,CAAC,6BAA6B;QAEhE,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,oCAAoC;;IAChE,CAAC;IACH,UAAC;AAAD,CAAC,CAVgC,MAAM,CAAC,IAAI,GAU3C;;;AAGD,2EAA2E;AAC3E,0CAA0C;AAC1C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACnB,MAAM,CAAC,MAAM,GAAG;QACd,IAAM,MAAM,GAAuB;YACjC,KAAK,EAAY,GAAG;YACpB,MAAM,EAAW,GAAG;YACpB,QAAQ,EAAS,MAAM,CAAC,IAAI;YAC5B,MAAM,EAAW,EAAE;YACnB,UAAU,EAAO,CAAC;YAClB,eAAe,EAAE,KAAK,CAAC,gFAAgF;SACxG,CAAC;QAEF,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,oFAAoF;IACvG,CAAC,CAAC;AACJ,CAAC","file":"js/main.js","sourcesContent":["'use strict';\n/** Imports */\nimport App from '..';\n\nabstract class State extends Phaser.State {\n  game: App; // It needs if we add property to `App` class\n}\n\nexport default State;\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/state.ts","'use strict';\n/** Imports */\nimport State from './state';\n\n// The first (boot) state of the game\nexport default class BootState extends State {\n  create(): void {\n    this.game.state.start('preloader');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/boot.state.ts","'use strict';\n/** Imports */\nimport State from './state';\n\n// The main state of the game\nexport default class MainState extends State {\n  sky: Phaser.Sprite; // Reference to background sprite\n\n  platforms: Phaser.Group; // Reference to the group of platform's sprites\n\n  create(): void {\n    // Phaser supports some physical engines (p2, box2d, ninja and arcate).\n    // For our game, we don't need a strong physical simulation, so we'll choose\n    // `arcade` model.\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n\n    // Add a simple background\n    this.sky = this.game.add.sprite(0, 0, 'sky');\n\n\n    // Also we create a group for platforms\n    this.platforms = this.game.add.group();\n\n    // and enable physics for any object that is created in this group\n    this.platforms.enableBody = true;\n\n\n    // Create the ground\n    const ground = this.platforms.create(\n      0,\n      this.game.world.height - 64,\n      'platform'\n    );\n\n    // and scale it to fit the width of the game (the original sprite\n    // size - 400x32, width of the game - 800)\n    ground.scale.setTo(2, 2);\n\n    // And make it immovable (Otherwise it will fall when we jump on it).\n    ground.body.immovable = true;\n\n    // Also add two ledges\n    const ledge1 = this.platforms.create(400, 400, 'platform');\n    ledge1.body.immovable = true;\n\n    const ledge2 = this.platforms.create(-150, 250, 'platform');\n    ledge2.body.immovable = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/main.state.ts","'use strict';\n/** Imports */\nimport State from './state';\n\n// Webpack will replace these imports with a URLs to images\nconst skyImage        = require('assets/images/sky.png'); // const skyImage = '/assets/images/sky.png';\nconst platformImage   = require('assets/images/platform.png');\nconst starImage       = require('assets/images/star.png');\nconst dudeImage       = require('assets/images/dude.png');\n\n\n// The state for loading core resources for the game\nexport default class PreloaderState extends State {\n  preload(): void {\n    console.debug('Assets loading started');\n\n    this.game.load.image('sky', skyImage);\n    this.game.load.image('platform', platformImage);\n    this.game.load.image('star', starImage);\n    this.game.load.spritesheet('dude', dudeImage, 32, 48);\n  }\n\n  create(): void {\n    console.debug('Assets loading completed');\n\n    this.game.state.start('main'); // Switch to main game state\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/states/preloader.state.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./styles/style.styl\n// module id = 8\n// module chunks = 1","module.exports = __webpack_public_path__ + \"assets/images/dude.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/dude.png\n// module id = 11\n// module chunks = 1","module.exports = __webpack_public_path__ + \"assets/images/platform.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/platform.png\n// module id = 12\n// module chunks = 1","module.exports = __webpack_public_path__ + \"assets/images/sky.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/sky.png\n// module id = 13\n// module chunks = 1","module.exports = __webpack_public_path__ + \"assets/images/star.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./assets/images/star.png\n// module id = 14\n// module chunks = 1","'use strict';\n/** Imports */\n// Import global dependencies. (I remind you, webpack create separate chunk file for them).\nrequire('pixi');    // Because Phaser use PIXI and p2 as global variables, they must be imported first.\nrequire('p2');\nrequire('phaser');  // So, in my case, TypeScript breaks if i import it as `import 'phaser';`. ¯\\_(ツ)_/¯\n\nimport 'styles/style.styl'; // Registering styles for the page; They will automatically inject.\n\nimport BootState        from './states/boot.state';\nimport PreloaderState   from './states/preloader.state';\nimport MainState        from './states/main.state';\n\n\n// The main class of our application\nexport default class App extends Phaser.Game {\n  constructor(config: Phaser.IGameConfig) {\n    super(config);\n\n    this.state.add('boot', BootState);\n    this.state.add('preloader', PreloaderState);\n    this.state.add('main', MainState); // Add `main` state into game\n\n    this.state.start('boot'); // Initialize and start `boot` state\n  }\n}\n\n\n// Like python's `__name__ == \"__main__\"` checks whether the module is part\n// of another program or it is executable.\nif (!module.parent) {\n  window.onload = () => {\n    const config: Phaser.IGameConfig = {\n      width:           800, // width of canvas\n      height:          600, // height of canvas\n      renderer:        Phaser.AUTO, // rendering context. The recommended parameter is Phaser.AUTO\n      parent:          '',\n      resolution:      1,\n      forceSetTimeOut: false // tell Phaser to use `setTimeOut` even if `requestAnimationFrame` is available.\n    };\n\n    new App(config); // Initialize the application. It will automatically inject <canvas /> into <body />\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}